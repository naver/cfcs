{"version":3,"file":"cfcs.cjs.js","sources":["../src/core/utils.ts","../src/dom/utils.ts","../src/reactive/const.ts","../src/reactive/detectDependencies.ts","../src/reactive/Observer.ts","../src/reactive/ComputedObserver.ts","../src/reactive/decorators/Observe.ts","../src/reactive/decorators/ReactiveSubscribe.ts","../src/reactive/inline.ts","../src/reactive/utils.ts","../src/reactive/adaptReactive.ts","../src/reactive/decorators/Computed.ts"],"sourcesContent":["/**\n * cfcs\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\n\n\n/**\n * @hidden\n */\nexport function keys<T extends Record<string, any>>(obj: T): Array<keyof T> {\n  return Object.keys(obj);\n}\n\n/**\n * @hidden\n */\nexport function camelize(str: string) {\n  return str.replace(/[\\s-_]([a-z])/g, (all, letter) => letter.toUpperCase());\n}\n\n/**\n * @hidden\n */\nexport function isString(val: any): val is string {\n  return typeof val === \"string\";\n}\n\n/**\n * @hidden\n */\nexport function isObject(val: any): val is object {\n  return typeof val === \"object\";\n}\n\n/**\n * @hidden\n */\nexport function isFunction(val: any): val is Function {\n  return typeof val === \"function\";\n}\n","/**\n * cfcs\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nimport { isString, Ref } from \"../core\";\n\n/**\n * @hidden\n */\nexport function findTarget<Target extends Element = Element>(target: string | Target | Ref<Target> | null): Target | null {\n  let el!: Target;\n\n  if (!target) {\n    return null;\n  } if (isString(target)) {\n    el = document.querySelector<Target>(target)!;\n  } else if (target instanceof Element) {\n    el = target;\n  } else if (\"value\" in target || \"current\" in target) {\n    el = target.value! || target.current!;\n  }\n\n  return el;\n}\n\n/**\n * @description Sets the name of the class method to be exposed to the outside.\n * @category DOM\n * @return Property Decorator\n * @example\n * ```ts\n * import { withClassMethods } from \"@cfcs/core\";\n *\n * class YourFrameworkComponent {\n *   @withClassMethod(METHOD_NAMES)\n *   inst = new YourComponent();\n * }\n * ```\n */\nexport function withClassMethods(methods: readonly string[]) {\n  return function (prototype: any, memberName: string) {\n    methods.forEach((name: string) => {\n      if (name in prototype) {\n        return;\n      }\n      prototype[name] = function (...args) {\n        const result = this[memberName][name](...args);\n\n        // fix `this` type to return your own `class` instance to the instance using the decorator.\n        if (result === this[memberName]) {\n          return this;\n        } else {\n          return result;\n        }\n      };\n    });\n  };\n}\n","/**\n * cfcs\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nexport const OBSERVERS_PATH = \"__observers__\";\nexport const COMPUTED_PATH = \"__computed__\";\nexport const CFCS_DETECTED_DEPENDENCIES_VERSION = 1;\nexport const CFCS_DETECTED_DEPENDENCIES = \"__CFCS_DETECTED_DEPENDENCIES__\";\n","/**\n * cfcs\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nimport {\n  CFCS_DETECTED_DEPENDENCIES,\n  CFCS_DETECTED_DEPENDENCIES_VERSION,\n} from \"./const\";\nimport { Observer } from \"./Observer\";\n\nexport interface Detected {\n  host: Observer<any>;\n  observers: Array<Observer<any>>;\n  push(observer: Observer<any>): void;\n}\n\nexport function getDetectedStack(): Array<Detected> {\n  // Version issues do not occur when you access the native object in the global.\n  (Object as any)[CFCS_DETECTED_DEPENDENCIES] = (Object as any)[CFCS_DETECTED_DEPENDENCIES] || {};\n  const versionList = (Object as any)[CFCS_DETECTED_DEPENDENCIES];\n\n  versionList[CFCS_DETECTED_DEPENDENCIES_VERSION] = versionList[CFCS_DETECTED_DEPENDENCIES_VERSION] || [];\n\n  return versionList[CFCS_DETECTED_DEPENDENCIES_VERSION];\n}\n\nexport function getCurrentDetected(): Detected | undefined {\n  const stack = getDetectedStack();\n\n  return stack[stack.length - 1];\n}\n\nexport function detectDependencies(host: Observer<any>) {\n  const stack = getDetectedStack();\n  const observers: Array<Observer> = [];\n  const detected: Detected = {\n    host,\n    observers,\n    push(observer: Observer<any>) {\n      if (host !== observer && observers.indexOf(observer) === -1) {\n        observers.push(observer);\n      }\n    },\n  };\n\n  stack.push(detected);\n  return detected;\n}\n\nexport function endDetectDependencies() {\n  const stack = getDetectedStack();\n\n  return stack.pop();\n}\n","/**\n * cfcs\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nimport Component from \"@egjs/component\";\nimport { getCurrentDetected } from \"./detectDependencies\";\n\ninterface EmitterEvents<Value> {\n  update: (value: Value, prevValue: Value) => void;\n}\n\n/**\n * Creates a mutable ref object. You can access the `.current` value and detect the value change through `.subscribe`.\n * @category Reactive\n * @see observe\n */\nexport class Observer<Value = any> {\n  protected _current: Value;\n  protected _emitter = new Component<EmitterEvents<Value>>();\n  /**\n   *\n   */\n  constructor(value?: Value) {\n    this._current = value as any;\n  }\n  /**\n   * return the current value.\n   */\n  public get current(): Value {\n    const currentDetected = getCurrentDetected();\n\n    currentDetected?.push(this);\n    return this._current as Value;\n  }\n  public set current(value: Value) {\n    this._setCurrent(value);\n  }\n  /**\n   * When the current value changes, the callback function is called.\n   */\n  public subscribe(callback: (value: Value, prevValue: Value) => void) {\n    this.current;\n    this._emitter.on(\"update\", callback);\n    return this;\n  }\n  /**\n   * Cancel the registered subscription through callback.\n   */\n  public unsubscribe(callback?: (value: Value, prevValue: Value) => void) {\n    this._emitter.off(\"update\", callback);\n    return this;\n  }\n  protected _setCurrent(value: Value) {\n    const prevValue = this._current;\n    const isUpdate = value !== prevValue;\n\n    this._current = value;\n\n    if (isUpdate) {\n      this._emitter.trigger(\"update\", value, prevValue);\n    }\n  }\n  /**\n   * @hidden\n   */\n  public toString() {\n    return `${this.current}`;\n  }\n  /**\n   * @hidden\n   */\n  public valueOf() {\n    return this.current;\n  }\n}\n","/**\n * cfcs\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nimport { detectDependencies, endDetectDependencies } from \"./detectDependencies\";\nimport { Observer } from \"./Observer\";\n\n/**\n * @category Reactive\n * @hidden\n */\nexport class ComputedObserver<T> extends Observer<T> {\n  private _registered: Array<Observer<any>> = [];\n  /**\n   * @description Creates a new computed observer from the values of other observers.\n   * It is read-only and if you change the value of the observer used inside the callback, its value will be automatically updated.\n   * @param _computedCallback A function for observers to be computed.\n   */\n  constructor(private _computedCallback: () => T) {\n    super();\n\n    this._current = this.current;\n  }\n\n  get current() {\n    detectDependencies(this);\n    const value = this._computedCallback();\n    const results = endDetectDependencies()!;\n\n    this._registered.forEach(observer => {\n      observer.unsubscribe(this._onCheckUpdate);\n    });\n    results.observers.forEach(observer => {\n      observer.subscribe(this._onCheckUpdate);\n    });\n    this._registered = results.observers;\n\n    return value;\n  }\n\n  private _onCheckUpdate = () => {\n    this._setCurrent(this.current);\n  }\n}\n","/**\n * cfcs\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nimport { getObserver } from \"../utils\";\n\n\nfunction injectObserve(prototype: any, memberName: string, publicName = memberName) {\n  const nextAttributes: PropertyDescriptor = {\n    configurable: true,\n    get: function () {\n      return getObserver(this, publicName).current;\n    },\n    set: function (value: any) {\n      getObserver(this, publicName, value).current = value;\n    },\n  };\n  Object.defineProperty(prototype, memberName, nextAttributes);\n  if (publicName !== memberName) {\n    Object.defineProperty(prototype, publicName, {\n      configurable: true,\n      get: function () {\n        return getObserver(this, publicName).current;\n      },\n    });\n  }\n}\n\nexport function Observe(protoype: any, memberName: string): void;\nexport function Observe(name?: string): (protoype: any, memberName: string) => void;\n/**\n * @description `Observe` is a property decorator and converts the property into a `reactive state`. You can detect its status through `.subscribe`.\n * @category Reactive-Decorator\n * @see ReactiveSubscribe\n * @example\n* ```ts\nimport { ReactiveSubscribe, Observe } from \"@cfcs/core\";\n\n@ReactiveSubscribe\nclass Component {\n  // The public name and state name are the same.\n  @Observe value1 = 1;\n  // If you want to set public name and private properties separately\n  @Observe(\"value2\") _value2 = 1;\n\n  constructor() {\n    requestAnimationFrame(() => {\n      this.value1 = 2;\n    });\n  }\n}\ninterface C\n```\n */\nexport function Observe(...args: any[]) {\n  if (args.length > 1) {\n    return injectObserve(args[0], args[1]);\n  }\n\n  return (prototype: any, memberName: string) => injectObserve(prototype, memberName, args[0]);\n}\n\n\nexport function Reactive(protoype: any, memberName: string): void;\nexport function Reactive(name?: string): (protoype: any, memberName: string) => void;\n/**\n * @hidden\n */\nexport function Reactive(...args: any[]) {\n  return Observe(...args);\n}\n\n","/**\n * cfcs\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nimport { keys } from \"../../core\";\nimport { getObserver, getObservers } from \"../utils\";\n\n/**\n * @hidden\n */\nexport function injectReactiveSubscribe(object: Record<string, any>,) {\n  object[\"subscribe\"] = function (name: string, callback: (value: any) => void) {\n    this[name];\n    getObserver(this, name).subscribe(callback);\n  };\n  object[\"unsubscribe\"] = function (name?: string, callback?: (value: any) => void) {\n    if (!name) {\n      keys(getObservers(this)).forEach((observerName) => {\n        this.unsubscribe(observerName);\n      });\n      return;\n    }\n    if (!(name in this)) {\n      return;\n    }\n    getObserver(this, name).unsubscribe(callback);\n  };\n}\n\n\n/**\n * @description `ReactiveSubscribe` is a class decorator and adds `.subscribe` and `.unsubscribe` methods.\n * @category Reactive-Decorator\n * @see Observe\n * @example\n * ```ts\nimport { ReactiveSubscribe, Observe } from \"@cfcs/core\";\n\n@ReactiveSubscribe\nclass Component {\n  @Observe value1 = 1;\n\n  constructor() {\n    requestAnimationFrame(() => {\n      this.value1 = 2;\n    });\n  }\n}\n\ninterface Component extends ReactiveSubscribe<{\n  value1: number;\n  value2: number;\n}> {}\n\nconst component = new Component();\n\n// 1\nconsole.log(component.value1);\n\ncomponent.subscribe(\"value1\", nextValue => {\n  // When the change event occurs => (2, 2)\n  console.log(nextValue, component.value2);\n});\n```\n */\nexport function ReactiveSubscribe(Constructor: any) {\n  const prototype = Constructor.prototype;\n\n  injectReactiveSubscribe(prototype);\n}\n\n/**\n * `ReactiveSubscribe` is a class decorator and adds `.subscribe` and `.unsubscribe` methods.\n * @category Reactive\n */\nexport interface ReactiveSubscribe<State extends Record<string, any>> {\n  /**\n   * When the value of the property changes, the callback function is called.\n   */\n  subscribe<Name extends keyof State = keyof State>(\n    name: Name, callback: (value: State[Name]) => void): void;\n  /**\n   * Unregister the callback function corresponding to the property.\n   */\n  unsubscribe<Name extends keyof State = keyof State>(\n    name?: Name, callback?: (value: State[Name]) => void): void;\n}\n","/**\n * cfcs\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nimport { ComputedObserver } from \"./ComputedObserver\";\nimport { Observer } from \"./Observer\";\nimport { ExtractNever, isFunction, keys } from \"../core\";\nimport { Observe } from \"./decorators/Observe\";\nimport { injectReactiveSubscribe, ReactiveSubscribe } from \"./decorators/ReactiveSubscribe\";\nimport { defineObservers, isObserver, setObserver } from \"./utils\";\n\n\ntype ConvertValue<Object extends Record<string, any>> = {\n  [Key in keyof Object]: Object[Key] extends Observer<infer Type> ? Type : Object[Key];\n}\n\ntype PickObverser<Object extends Record<string, any>> = ExtractNever<{\n  [Key in keyof Object]: Object[Key] extends Observer<infer Type> ? Type : never;\n}>;\n\n/**\n * @typedef\n * @category Reactive\n */\nexport type ParitalReactiveObject<Object extends Record<string, any>>\n  = ConvertValue<Object> & ReactiveSubscribe<PickObverser<Object>>;\n\n\n/**\n * Result type of `reactive` function call\n * @category Reactive\n * @see reactive\n * @example\n *  ```js\n * import { reactive } from \"@cfcs/core\";\n *\n * // define reactive state\n * const obj = reactive({\n *   value1: 1,\n *   value2: 2,\n * });\n * ```\n */\nexport type ReactiveObject<Object extends Record<string, any>>\n= Object & ReactiveSubscribe<Object>;\n\nfunction makeReactiveObject<Object extends Record<string, any>>(\n  setup: Readonly<Object> | (() => Readonly<Object>),\n  all?: boolean,\n): ParitalReactiveObject<Object> {\n  const result = isFunction(setup) ? setup() : setup;\n  const reactiveObject: Record<string, any> = {};\n\n  defineObservers(reactiveObject);\n  keys(result).forEach((name: any) => {\n    const value = result[name];\n\n    if (isObserver(value)) {\n      setObserver(reactiveObject, name, value);\n    } else {\n      setObserver(reactiveObject, name, observe(value));\n    }\n    Observe(name)(reactiveObject, name);\n  });\n\n  injectReactiveSubscribe(reactiveObject);\n  return reactiveObject as ParitalReactiveObject<Object>;\n}\n\n/**\n * @description Make the return value of the corresponding object or function a reactive object.\n * @category Reactive\n * @param setup - The target object or function to which reactive is applied\n * @returns Makes all values into reactive objects.\n * @example\n * ```ts\n * import { reactive } from \"@cfcs/core\";\n *\n * const obj = reactive({\n *  value1: 1,\n *  value2: 2,\n * });\n *\n * obj.subscribe(\"value1\", value1 => {\n *   console.log(value1);\n * });\n * obj.value1 = 2;\n * ```\n */\nexport function reactive<Object extends Record<string, any>>(\n  setup: Readonly<Object> | (() => Readonly<Object>),\n): ReactiveObject<Object> {\n  return makeReactiveObject(setup, true) as ReactiveObject<Object>;\n}\n\n/**\n * @description Make the return value of the corresponding object or function a reactive object.\n * @category Reactive\n * @param setup - The target object or function to which reactive is applied\n * @returns Only the values to which observer is applied are objects to which reactive is applied.\n * @example\n * ```ts\n * import { partialReactive, observe } from \"@cfcs/core\";\n *\n * const value1 = observe(1);\n * const value2 = observe(2);\n * const obj = partialReactive({\n *  value1,\n *  value2,\n * });\n *\n * obj.subscribe(\"value1\", value1 => {\n *   console.log(value1);\n * });\n * value1.current = 2;\n * ```\n */\nexport function partialReactive<Object extends Record<string, any>>(\n  setup: Readonly<Object> | (() => Readonly<Object>),\n): ParitalReactiveObject<Object> {\n  return makeReactiveObject(setup);\n}\n\n/**\n * @description Creates a mutable ref object. You can access the `.current` value and detect the value change through `.subscribe`.\n * @category Reactive\n * @example\n * ```ts\n * import { observe } from \"@cfcs/core\";\n *\n * const ob1 = observe(1);\n *\n * ob1.subscribe(nextValue => {\n *   console.log(nextValue);\n * });\n *\n * ob1.current = 2;\n * ```\n */\nexport function observe<Type>(defaultValue?: Type): Observer<Type> {\n  return new Observer<Type>(defaultValue);\n}\n\n/**\n * @hidden\n */\nexport function computed<Type>(computedCallback: () => Type) {\n  return new ComputedObserver(computedCallback);\n}\n","/**\n * cfcs\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nimport { COMPUTED_PATH, OBSERVERS_PATH } from \"./const\";\nimport { Observer } from \"./Observer\";\nimport { ReactiveMethods } from \"./types\";\nimport { isObject, Ref } from \"../core\";\nimport { observe } from \"./inline\";\nimport { ReactiveSubscribe } from \"./decorators/ReactiveSubscribe\";\n\n/**\n * @hidden\n */\nexport function withReactiveMethods<\n  Instance,\n  Names extends keyof Partial<Instance>,\n  Return extends ReactiveMethods<Instance, Names>\n>(ref: Ref<Instance>, methods?: readonly Names[]): Return {\n  const obj: Record<any, any> = {};\n\n  if (!methods) {\n    return obj;\n  }\n\n  methods.forEach(name => {\n    obj[name] = function (...args: any[]) {\n      const current: any = ref.current || ref.value;\n\n      return current[name](...args);\n    };\n  });\n  return obj as Return;\n}\n\n/**\n * @hidden\n */\nexport function defineObservers(instance: any) {\n  const observers: Record<string, Observer<any>> = {};\n\n  Object.defineProperty(instance, OBSERVERS_PATH, {\n    get() {\n      return observers;\n    },\n  });\n\n  return observers;\n}\n\n/**\n * @hidden\n */\nexport function getObservers(instance: any, isComputed?: boolean): Record<string, Observer<any>> {\n  if (!instance[OBSERVERS_PATH]) {\n    defineObservers(instance);\n  }\n  const observers = instance[OBSERVERS_PATH];\n\n  if (!isComputed) {\n    const computedList = instance?.constructor?.prototype?.[COMPUTED_PATH];\n\n    if (computedList) {\n      computedList.forEach(name => {\n        if (!(name in observers) && name in instance) {\n          instance[name];\n        }\n      });\n    }\n  }\n  return observers;\n}\n\n/**\n * @hidden\n */\nexport function getObserver(instance: any, name: string, defaultValue?: any): Observer<any> {\n  const observers = getObservers(instance);\n\n  if (!observers[name]) {\n    observers[name] = observe(defaultValue);\n  }\n  return observers[name];\n}\n\n/**\n * @hidden\n */\nexport function setObserver(instance: any, name: string, observer: Observer<any>) {\n  const observers = getObservers(instance);\n\n  observers[name] = observer;\n}\n\n/**\n * @description Whether that object is an observer instance\n * @category Reactive\n */\nexport function isObserver(val: any): val is Observer {\n  return val && isObject(val) && \"current\" in val && \"subscribe\" in val && \"unsubscribe\" in val;\n}\n\n/**\n * @description Whether the object is reactive\n * @category Reactive\n */\nexport function isReactive(val: any): val is ReactiveSubscribe<any> {\n  return val && !isObserver(val) && \"subscribe\" in val && \"unsubscribe\" in val;\n}\n","/**\n * cfcs\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nimport { isFunction, keys } from \"../core\";\nimport { Ref } from \"../core/types\";\nimport { ReactiveAdapter, ReactiveAdapterParam } from \"./ReactiveAdapter\";\nimport { ReactiveSubscribe } from \"./decorators/ReactiveSubscribe\";\nimport { ReactiveEventCallback, ReactiveState } from \"./types\";\nimport { getObservers, withReactiveMethods } from \"./utils\";\nimport Component from \"@egjs/component\";\nimport { EventKey, EventTriggerParams } from \"@egjs/component/declaration/types\";\n\n/**\n * @category Reactive\n * @hidden\n */\nexport function adaptReactive<\n  Instance extends ReactiveSubscribe<Record<string, any>>,\n  State extends Record<string, any> = ReactiveState<Instance>,\n  Methods extends keyof Partial<Instance> = never,\n  Props = any,\n  Events extends Record<string, any> = {},\n>(adapter: ReactiveAdapterParam<Instance, State, Methods, Props, Events>, props?: () => Props) {\n  const objectAdapter: ReactiveAdapter<Instance, State, Methods, Props, Events> = isFunction(adapter) ? {\n    setup: adapter,\n  } : adapter;\n\n  function getProps(): Props {\n    return props?.() ?? objectAdapter.props?.() ?? objectAdapter.data?.() ?? {} as Props;\n  }\n\n  const eventEmitter = new Component<Events>();\n  const mountedHooks: Array<(props: Props, instance?: Instance | null) => Instance | void> = [];\n  const initHooks: Array<(instance: Instance, props: Props) => void> = [];\n  const destroyHooks: Array<(instance: Instance, props: Props) => void> = [];\n  const onHooks: Array<<EventName extends EventKey<Events>>(instance: Instance, eventName: EventName, listener: ReactiveEventCallback<Events, EventName>) => void | (() => void)> = [];\n  const instanceRef: Ref<Instance> = { current: null };\n  let offHooksList: Array<Array<() => void>> = [];\n  let initialState: State | null = null;\n  let eventNames: readonly (keyof Events)[] = [];\n  let methodNames: readonly Methods[] = [];\n\n\n  const onMounted = (callback: (props: Props, instance?: Instance | null) => Instance | void) => {\n    mountedHooks.push(callback);\n  };\n  const onInit = (callback: (instance: Instance, props: Props) => void) => {\n    initHooks.push(callback);\n  };\n  const onDestroy = (callback: (instance: Instance, props: Props) => void): void => {\n    destroyHooks.push(callback)\n  };\n  const on = (callback: <EventName extends EventKey<Events>>(instance: Instance, eventName: EventName, listener: ReactiveEventCallback<Events, EventName>) => void | (() => void)) => {\n    onHooks.push(callback);\n  };\n  const emit = <EventName extends EventKey<Events>>(eventName: EventName, ...params: EventTriggerParams<Events, EventName>) => {\n    eventEmitter.trigger(eventName, ...params);\n  };\n\n  const setInitialState = (state: State) => {\n    initialState = state;\n  };\n  const setEvents = (events: readonly (keyof Events)[]) => {\n    eventNames = events;\n  }\n  const setMethods = (methods: readonly Methods[]) => {\n    methodNames = methods;\n  }\n\n  if (objectAdapter.setup) {\n    instanceRef.current = objectAdapter.setup({\n      getProps,\n      setInitialState,\n      setEvents,\n      setMethods,\n      onMounted,\n      onDestroy,\n      onInit,\n      emit,\n      on,\n    }) || null;\n  }\n\n  if (objectAdapter.created) {\n    instanceRef.current = objectAdapter.created(getProps()) || null;\n  }\n\n  if (objectAdapter.events) {\n    setEvents(objectAdapter.events);\n  }\n  if (objectAdapter.state) {\n    setInitialState(objectAdapter.state);\n  }\n  if (objectAdapter.methods) {\n    setMethods(objectAdapter.methods);\n  }\n  if (objectAdapter.mounted) {\n    onMounted(objectAdapter.mounted);\n  }\n  if (objectAdapter.destroy) {\n    destroyHooks.push(objectAdapter.destroy);\n  }\n  if (objectAdapter.init) {\n    initHooks.push(objectAdapter.init);\n  }\n  if (objectAdapter.on) {\n    onHooks.push((instance, eventName, listener) => {\n      const off = objectAdapter.on!(instance, eventName, listener);\n\n      return () => {\n        off && off();\n        objectAdapter.off?.(instance, eventName, listener);\n      };\n    });\n  }\n\n  return {\n    events: () => eventNames,\n    state(): State {\n      const inst = instanceRef.current;\n\n      if (initialState) {\n        return initialState;\n      }\n      if (inst) {\n        const observers = getObservers(inst);\n\n        setInitialState(keys(observers).reduce((prev, cur) => {\n          prev[cur] = observers[cur].current;\n          return prev;\n        }, {} as any));\n      }\n      return initialState || {} as State;\n    },\n    instance() {\n      return instanceRef.current;\n    },\n    mounted(): void {\n      const props = getProps();\n\n      mountedHooks.forEach(hook => {\n        instanceRef.current = hook(props, instanceRef.current) || instanceRef.current;\n      });\n\n    },\n    init(): void {\n      // on events\n      const instance = instanceRef.current!;\n      const props = getProps();\n\n      offHooksList = (eventNames as string[]).map(eventName => {\n        const listener = (...params: any[]) => {\n          (eventEmitter as any).trigger(eventName, ...params);\n        };\n\n        const instance = instanceRef.current!;\n\n        return onHooks.map(hook => hook(instance, eventName, listener as any)).filter(Boolean) as Array<() => void>;\n      });\n\n      // init\n      initHooks.forEach(hook => {\n        hook(instance, props);\n      });\n    },\n    destroy(): void {\n      // off events\n      offHooksList.forEach(offHooks => {\n        offHooks.forEach(hook => {\n          hook();\n        });\n      });\n\n      // destroy\n      eventEmitter.off();\n      const instance = instanceRef.current!;\n      const props = getProps();\n\n      destroyHooks.forEach(hook => {\n        hook(instance, props);\n      });\n    },\n    methods() {\n      return withReactiveMethods<any, any, any>(instanceRef, methodNames);\n    },\n    on(eventName: string, listener: ReactiveEventCallback<any, any>) {\n      eventEmitter.on(eventName, listener);\n    },\n    off(eventName: string, listener: ReactiveEventCallback<any, any>) {\n      eventEmitter.off(eventName, listener);\n    },\n  };\n}\n","/**\n * cfcs\n * Copyright (c) 2022-present NAVER Corp.\n * MIT license\n */\nimport { COMPUTED_PATH } from \"../const\";\nimport { computed } from \"../inline\";\nimport { getObserver, getObservers } from \"../utils\";\n\n\n/**\n * @description `Computed` is a property decorator.\n * Changes in computed state values are also recognized according to changes in observers used within the getter function.\n * You can detect its status through `.subscribe`.\n * @hidden\n * @category Reactive-Decorator\n * @see ReactiveSubscribe\n * @example\n * ```ts\nconst ob1 = observe(0);\nconst ob2 = observe(1);\n\n// When\n@ReactiveSubscribe\nclass TestComputed {\n  @Computed\n  get ob3() {\n    return ob1.current + ob2.current;\n  }\n}\nconst inst = new TestComputed();\n\ninst.subscribe(\"ob3\", ob3 => {\n  console.log(ob3);\n});\n\nob1.current = 1;\n```\n */\nexport function Computed(prototype: any, memberName: string, attributes: PropertyDescriptor): PropertyDescriptor {\n  const get = attributes.get!;\n\n  function getComputed() {\n    const observers = getObservers(this, true);\n\n    if (!(memberName in observers)) {\n      observers[memberName] = computed(get.bind(this));\n    }\n    return getObserver(this, memberName).current;\n  }\n  const nextAttributes: PropertyDescriptor = {\n    configurable: true,\n    get: getComputed,\n  }\n\n  prototype[COMPUTED_PATH] ||= [];\n  const computedList = prototype[COMPUTED_PATH];\n\n  if (computedList.indexOf(memberName) === -1) {\n    computedList.push(memberName);\n  }\n  Object.defineProperty(prototype, memberName, nextAttributes);\n\n  return nextAttributes;\n}\n"],"names":["keys","obj","Object","camelize","str","replace","all","letter","toUpperCase","isString","val","isObject","isFunction","findTarget","target","el","document","querySelector","Element","value","current","withClassMethods","methods","prototype","memberName","forEach","name","args","_i","arguments","length","result","_a","apply","OBSERVERS_PATH","COMPUTED_PATH","CFCS_DETECTED_DEPENDENCIES_VERSION","CFCS_DETECTED_DEPENDENCIES","getDetectedStack","versionList","getCurrentDetected","stack","detectDependencies","host","observers","detected","push","observer","indexOf","endDetectDependencies","pop","Observer","_emitter","Component","_current","defineProperty","get","currentDetected","set","_setCurrent","subscribe","callback","on","unsubscribe","off","prevValue","isUpdate","trigger","toString","concat","valueOf","ComputedObserver","_super","__extends","_computedCallback","_this","_registered","_onCheckUpdate","results","injectObserve","publicName","nextAttributes","configurable","getObserver","Observe","Reactive","injectReactiveSubscribe","object","getObservers","observerName","ReactiveSubscribe","Constructor","makeReactiveObject","setup","reactiveObject","defineObservers","isObserver","setObserver","observe","reactive","partialReactive","defaultValue","computed","computedCallback","withReactiveMethods","ref","instance","isComputed","computedList","_b","constructor","isReactive","adaptReactive","adapter","props","objectAdapter","getProps","_e","call","_c","_d","data","eventEmitter","mountedHooks","initHooks","destroyHooks","onHooks","instanceRef","offHooksList","initialState","eventNames","methodNames","onMounted","onInit","onDestroy","emit","eventName","params","setInitialState","state","setEvents","events","setMethods","created","mounted","destroy","init","listener","inst","observers_1","reduce","prev","cur","hook","map","__spreadArray","filter","Boolean","offHooks","Computed","attributes","getComputed","bind"],"mappings":"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"}